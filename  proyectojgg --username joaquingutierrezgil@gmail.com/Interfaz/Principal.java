package Interfaz;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import Logica.Reproductor.ElegirTipo;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import Reproductor.MusicTAGS;
import javax.swing.JSlider;
import Reproductor.MedioStrategy;
import javax.swing.filechooser.FileNameExtensionFilter;
import Persistencia.*;
import Streaming.LeeListaStreaming;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Dictionary;
import java.util.Hashtable;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import org.jaudiotagger.audio.AudioFile;
import org.jaudiotagger.audio.AudioFileIO;
import org.jaudiotagger.audio.AudioHeader;
import org.jaudiotagger.audio.exceptions.CannotReadException;
import org.jaudiotagger.audio.exceptions.InvalidAudioFrameException;
import org.jaudiotagger.audio.exceptions.ReadOnlyFileException;
import org.jaudiotagger.tag.FieldKey;
import org.jaudiotagger.tag.TagException;


/*
 * Principal.java
 *
 * Created on 25-abr-2010, 20:57:44
 */
/**
 *
 * @author joaquin
 */
public class Principal extends javax.swing.JFrame {

    private File ultimaCancion;
    final static int interval = 1000;
    private MusicTAGS mt = new MusicTAGS();
    //Al iniciar el reproductor no hay archivo para reproducir
    private File archivo = null;
    private MedioStrategy medio;
    private ElegirTipo elegir = new ElegirTipo();
    private LeeListaStreaming lee = new LeeListaStreaming();
    private ListasReproduccion listas = new ListasReproduccion();
    //JList
    private DefaultListModel dlm = new DefaultListModel();
    //Abrir ventanas
    private abrirUrl ab = null;
    private Opciones l = null;

    private Twitter tw = null;

    /** Creates new form Principal */
    public Principal() {

        this.ab = new abrirUrl();
        this.l = new Opciones();
        this.tw = new Twitter();

        this.setTitle("Reproductor multimedia");
        initComponents();
        this.VOLUMEN.setPaintTicks(true);
        this.VOLUMEN.setPaintLabels(true);
        Dictionary labelTable = new Hashtable();
        labelTable.put(new Integer(0), new JLabel("Bajo"));
        labelTable.put(new Integer(50), new JLabel("Medio"));
        labelTable.put(new Integer(100), new JLabel("Alto"));
        this.VOLUMEN.setLabelTable(labelTable);

        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        RESUME = new javax.swing.JButton();
        EXAMINAR = new javax.swing.JButton();
        VOLUMEN = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PLAY = new javax.swing.JButton();
        PAUSE = new javax.swing.JButton();
        STOP = new javax.swing.JButton();
        TITULO = new javax.swing.JTextField();
        ARTISTA = new javax.swing.JTextField();
        ALBUM = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        AÑADIR = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        tiempoActual = new javax.swing.JLabel();
        listaReproduccion = new java.awt.List();
        barraTiempo = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        tiempoTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        actualizarStreaming = new javax.swing.JButton();
        opciones = new javax.swing.JButton();
        streamingList = new java.awt.List();
        twitter = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(221, 214, 209));

        RESUME.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Images/media-playback-start.png"))); // NOI18N
        RESUME.setContentAreaFilled(false);
        RESUME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RESUMEMouseClicked(evt);
            }
        });

        EXAMINAR.setText("Examinar");
        EXAMINAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EXAMINARMouseClicked(evt);
            }
        });

        VOLUMEN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VOLUMENStateChanged(evt);
            }
        });

        jLabel1.setText("Título:");

        jLabel2.setText("Artista:");

        jLabel3.setText("Album:");

        PLAY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Images/g1169.png"))); // NOI18N
        PLAY.setContentAreaFilled(false);
        PLAY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLAYMouseClicked(evt);
            }
        });

        PAUSE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Images/g1233.png"))); // NOI18N
        PAUSE.setContentAreaFilled(false);
        PAUSE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PAUSEMouseClicked(evt);
            }
        });

        STOP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Images/g1218.png"))); // NOI18N
        STOP.setContentAreaFilled(false);
        STOP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                STOPMouseClicked(evt);
            }
        });

        TITULO.setEditable(false);

        ARTISTA.setEditable(false);

        ALBUM.setEditable(false);

        jLabel4.setText("Lista de Reproducción:");

        AÑADIR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Images/Add Green Button.png"))); // NOI18N
        AÑADIR.setText("Añadir");
        AÑADIR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AÑADIRMouseClicked(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaz/Images/Minus Green Button.png"))); // NOI18N
        jButton3.setText("Eliminar");

        tiempoActual.setText("- : -");

        listaReproduccion.setName("Lista de reproduccion"); // NOI18N

        jLabel5.setText("/");

        tiempoTotal.setText("- : -");

        jLabel6.setText("Lista de Streaming:");

        actualizarStreaming.setText("Actualizar");
        actualizarStreaming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarStreamingActionPerformed(evt);
            }
        });

        opciones.setText("Opciones");
        opciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                opcionesMouseClicked(evt);
            }
        });

        streamingList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                streamingListMouseClicked(evt);
            }
        });

        twitter.setText("Tweet it!");
        twitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twitterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PLAY)
                                .addGap(18, 18, 18)
                                .addComponent(PAUSE)
                                .addGap(18, 18, 18)
                                .addComponent(RESUME)
                                .addGap(18, 18, 18)
                                .addComponent(STOP))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(EXAMINAR))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(VOLUMEN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ALBUM, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TITULO, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ARTISTA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))))
                            .addComponent(barraTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(tiempoActual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tiempoTotal))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(twitter)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AÑADIR)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(listaReproduccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(actualizarStreaming)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(opciones))
                        .addComponent(streamingList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TITULO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ARTISTA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ALBUM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tiempoActual)
                            .addComponent(jLabel5)
                            .addComponent(tiempoTotal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(barraTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PLAY)
                            .addComponent(PAUSE)
                            .addComponent(RESUME)
                            .addComponent(STOP))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(VOLUMEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EXAMINAR))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(streamingList, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(listaReproduccion, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AÑADIR)
                        .addComponent(jButton3)
                        .addComponent(twitter))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opciones)
                            .addComponent(actualizarStreaming))))
                .addGap(21, 21, 21))
        );

        Archivo.setText("Archivo");

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        abrir.setText("Abrir URL");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        Archivo.add(abrir);

        jMenuBar1.add(Archivo);

        jMenu2.setText("Ayuda");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RESUMEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RESUMEMouseClicked
        if (!medio.isPlaying()) {
            medio.resume();
        } else if (medio == null) {
            System.out.println("El medio es null.");
        }
    }//GEN-LAST:event_RESUMEMouseClicked

    private void EXAMINARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EXAMINARMouseClicked

        //Creamos el JFileChooser, la ventana de elección de archivos.
        JFileChooser fileChooser = new JFileChooser();

        //Filtro de los archivos a abrir.
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("MP3 & AVI", "mp3", "avi");
        fileChooser.setFileFilter(filtro);

        int seleccion = fileChooser.showOpenDialog(null);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            archivo = fileChooser.getSelectedFile();
            String fileName = archivo.getName();
            String ext = (fileName.lastIndexOf(".") == -1) ? "" : fileName.substring(fileName.lastIndexOf(".") + 1, fileName.length());

            if (ext.equalsIgnoreCase("mp3")) {

                //Me guardo cual ha sido la última canción reproducida.
                ultimaCancion = archivo;

                setMedio(elegir.seleccionaMedio(archivo));

                if (medio.isPlaying() == false) {
                    medio.runEngine(archivo);
                    this.etiquetas(ultimaCancion);
                }

            } else if (ext.equalsIgnoreCase("avi")) {
                setMedio(elegir.seleccionaMedio(archivo));
                if (medio.isPlaying() == false) {
                    medio.runEngine(archivo);
                }
            }
        }
    }//GEN-LAST:event_EXAMINARMouseClicked

    public void reproduceURL(String st){
        this.setMedio(elegir.seleccionaURL(st));
        System.out.println(medio.toString());
        medio.runURL(st);
    }

    public void etiquetas(File f) {
        try {
            AudioFile mFile = AudioFileIO.read(f);
            org.jaudiotagger.tag.Tag tag = mFile.getTag();
            AudioHeader a = mFile.getAudioHeader();
            this.TITULO.setText(tag.getFirst(FieldKey.TITLE));
            this.ARTISTA.setText(tag.getFirst(FieldKey.ARTIST));
            this.ALBUM.setText(tag.getFirst(FieldKey.ALBUM));
        } catch (CannotReadException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TagException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ReadOnlyFileException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidAudioFrameException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void VOLUMENStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VOLUMENStateChanged
        // TODO add your handling code here:
        String sVol;
        double volumen = 0;
        this.VOLUMEN = new JSlider(JSlider.HORIZONTAL, 0, 100, 50);
        JSlider source = (JSlider) evt.getSource();

        volumen = (double) ((JSlider) evt.getSource()).getValue();
        volumen = volumen / 100.0;
        if (volumen <= 0) {
            volumen = 0;
        } else if (volumen >= 1) {
            volumen = 1;
        }

        sVol = Double.toString(volumen);
        this.VOLUMEN.setToolTipText(sVol);

        if (medio == null) {
            System.out.println("No hay medio para cambiarle el volumen.");
        } else {
            medio.setVolume(volumen);
        }
    }//GEN-LAST:event_VOLUMENStateChanged

    private void PLAYMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLAYMouseClicked

        if (medio == null) {
            System.out.println("No hay medio para reproducir.");
        } else {
            if (medio.isPlaying() == false) {
                medio.runEngine(ultimaCancion);
                if (ultimaCancion != null) {
                    this.etiquetas(ultimaCancion);
                }
            }
        }

    }//GEN-LAST:event_PLAYMouseClicked

    private void PAUSEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PAUSEMouseClicked

        if (medio == null) {
            System.out.println("El medio es NULL.");
        } else {
            medio.pause();
        }

    }//GEN-LAST:event_PAUSEMouseClicked

    private void STOPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_STOPMouseClicked

        if (medio == null) {
            System.out.println("Objeto -medio- no creado.");
        } else {
            if (medio.isPlaying() == true) {
                medio.stop();
                this.TITULO.setText("");
                this.ARTISTA.setText("");
                this.ALBUM.setText("");
            } else {
                System.out.println("No se está reproduciendo ningún medio.");
            }
        }
    }//GEN-LAST:event_STOPMouseClicked

    private void actualizarStreamingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarStreamingActionPerformed

        //lee.leeFichero();
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
            archivo = new File("C:\\ConfigStreaming\\listaStreaming.txt_host");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            // Lectura del fichero
            String linea;
            while ((linea = br.readLine()) != null) {
                //listas.addStreaming(linea);
                System.out.println("Rellenar streaming");
                this.streamingList.add(linea);
            }

            //listas.recorreLista();

        } catch (Exception e) {
            System.out.println("Error en la lectura del fichero: " + e.getMessage());
        }finally {
            // En el finally cerramos el fichero, para asegurarnos
            // que se cierra tanto si todo va bien como si salta
            // una excepcion.

            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.getMessage();
            }
        }

    }//GEN-LAST:event_actualizarStreamingActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        this.ab.setVisible(true);
    }//GEN-LAST:event_abrirActionPerformed

    private void opcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_opcionesMouseClicked
        this.l.setVisible(true);
    }//GEN-LAST:event_opcionesMouseClicked

    private void AÑADIRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AÑADIRMouseClicked
}//GEN-LAST:event_AÑADIRMouseClicked

    private void streamingListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_streamingListMouseClicked
        Ficheros.ficheros f = new Ficheros.ficheros();
        String st;
        String ip = null;

        st = this.streamingList.getSelectedItem();
        ip = f.leeFichero("config");

        String direccion = "http://" + ip + "/" + st;

        direccion = direccion.replace(" ", "%20");
        System.out.println(direccion);
        this.reproduceURL(direccion);
    }//GEN-LAST:event_streamingListMouseClicked

    private void twitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twitterActionPerformed
        this.tw.setVisible(true);
    }//GEN-LAST:event_twitterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ALBUM;
    private javax.swing.JTextField ARTISTA;
    private javax.swing.JMenu Archivo;
    private javax.swing.JButton AÑADIR;
    private javax.swing.JButton EXAMINAR;
    private javax.swing.JButton PAUSE;
    private javax.swing.JButton PLAY;
    private javax.swing.JButton RESUME;
    private javax.swing.JButton STOP;
    private javax.swing.JTextField TITULO;
    private javax.swing.JSlider VOLUMEN;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JButton actualizarStreaming;
    private javax.swing.JProgressBar barraTiempo;
    private javax.swing.JButton jButton3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.List listaReproduccion;
    private javax.swing.JButton opciones;
    private java.awt.List streamingList;
    private javax.swing.JLabel tiempoActual;
    private javax.swing.JLabel tiempoTotal;
    private javax.swing.JButton twitter;
    // End of variables declaration//GEN-END:variables

    /**
     * @param ALBUM the ALBUM to set
     */
    public void setALBUM(String ALBUM) {
        this.ALBUM.setText(ALBUM);
    }

    /**
     * @param ARTISTA the ARTISTA to set
     */
    public void setARTISTA(String ARTISTA) {
        this.ARTISTA.setText(ARTISTA);
    }

    /**
     * @param TITULO the TITULO to set
     */
    public void setTITULO(String TITULO) {
        this.TITULO.setText(TITULO);
    }

    /**
     * @return the tiempoTotal
     */
    public javax.swing.JLabel getTiempoTotal() {
        return tiempoTotal;
    }

    /**
     * @param tiempoTotal the tiempoTotal to set
     */
    public void setTiempoTotal(String tiempoTotal) {
        this.tiempoTotal.setText(tiempoTotal);
    }

    /**
     * @param medio the medio to set
     */
    public void setMedio(MedioStrategy medio) {
        this.medio = medio;
    }
}
